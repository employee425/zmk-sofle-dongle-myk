#define ZMK_POINTING_DEFAULT_MOVE_VAL 800  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
};

&mmv {
    trigger-period-ms = <5>;
    time-to-max-speed-ms = <80>;
    acceleration-exponent = <2>;
};

&lt {
    flavor = "balanced";
    hold-trigger-on-release;
};

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE GRAVE TILDE DOUBLE_QUOTES MINUS>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    DBTunderscore: DBTunderscore {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTUNDERSCORE";
        #binding-cells = <0>;
        bindings = <&kp MINUS>, <&kp UNDER>;
    };

    DBTquotes: DBTquotes {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTQUOTES";
        #binding-cells = <0>;
        bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;
    };

    DBTsemicolon: DBTsemicolon {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTSEMICOLON";
        #binding-cells = <0>;
        bindings = <&kp COMMA>, <&kp SEMICOLON>;
    };

    DBTexclamation: DBTexclamation {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTEXCLAMATION";
        #binding-cells = <0>;
        bindings = <&kp QUESTION>, <&kp EXCL>;
    };

    DBTslash: DBTslash {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTSLASH";
        #binding-cells = <0>;
        bindings = <&kp SLASH>, <&kp BACKSLASH>;
    };

    DBTcolon: DBTcolon {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTCOLON";
        #binding-cells = <0>;
        bindings = <&kp PERIOD>, <&kp COLON>;
    };

    longPress: longPress {
        compatible = "zmk,behavior-hold-tap";
        label = "LONGPRESS";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <300>;
        flavor = "tap-preferred";
    };

    HMRshift: HMRshift {
        compatible = "zmk,behavior-hold-tap";
        label = "HMRSHIFT";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <220>;
        hold-trigger-key-positions = <0 13 14 27 26 39 40 1 44 2 2 3 4 15 16 17 28 29 30 5 18 31 44 41 42 43 44 53 54 55 56 57>;
        hold-trigger-on-release;
        flavor = "balanced";
    };

    HMLshift: HMLshift {
        compatible = "zmk,behavior-hold-tap";
        label = "HMLSHIFT";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <220>;
        hold-trigger-on-release;
        hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 60 61 62 63 59>;
        flavor = "balanced";
    };

    HMR: HMR {
        compatible = "zmk,behavior-hold-tap";
        label = "HMR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        hold-trigger-key-positions = <0 13 14 27 26 39 40 1 44 2 2 3 4 15 16 17 28 29 30 5 18 31 44 41 42 43 44 53 54 55 56 57>;
        hold-trigger-on-release;
        flavor = "balanced";
    };

    HML: HML {
        compatible = "zmk,behavior-hold-tap";
        label = "HML";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 60 61 62 63 59>;
        flavor = "balanced";
        hold-trigger-on-release;
    };

    DBTcapsword: DBTcapsword {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTCAPSWORD";
        #binding-cells = <0>;
        bindings = <&kp LEFT_SHIFT>, <&sk LEFT_SHIFT>, <&caps_word>;
    };

    DBTlayer2: DBTlayer2 {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTLAYER2";
        #binding-cells = <0>;
        bindings = <&kp NUMBER_2>, <&tog 2>;
    };

    DBTlayer3: DBTlayer3 {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTLAYER3";
        #binding-cells = <0>;
        bindings = <&kp NUMBER_3>, <&tog 3>;
    };

    DBTlayer4: DBTlayer4 {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTLAYER4";
        #binding-cells = <0>;
        bindings = <&kp NUMBER_4>, <&tog 4>;
    };

    DBTlayer5: DBTlayer5 {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTLAYER5";
        #binding-cells = <0>;
        bindings = <&kp NUMBER_5>, <&tog 5>;
    };

    DBTlayer6: DBTlayer6 {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTLAYER6";
        #binding-cells = <0>;
        bindings = <&kp NUMBER_6>, <&tog 6>;
    };

    combos {
        compatible = "zmk,combos";

        softOFF {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
            timeout-ms = <2000>;
            layers = <1>;
        };

        accent1 {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <47 48>;
        };

        accent2 {
            bindings = <&kp TILDE>;
            key-positions = <47 23>;
        };

        accent3 {
            bindings = <&kp CARET>;
            key-positions = <47 49>;
        };

        accent4 {
            bindings = <&kp GRAVE>;
            key-positions = <48 49>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <40 41>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <41 42>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <42 43>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <43 44>;
        };
    };

    behaviors {
    };

    macros {
        pair_parens: pair_parens {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT_ARROW>;
            label = "PAIR_PARENS";
        };

        pair_brackets: pair_brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT_ARROW>;
            label = "PAIR_BRACKETS";
        };

        pair_braces: pair_braces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT_ARROW>;
            label = "PAIR_BRACES";
        };

        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC           &kp N1           &DBTlayer2         &DBTlayer3           &DBTlayer4              &DBTlayer5            &kp UP_ARROW     &DBTlayer6          &kp N7                   &kp N8                &kp N9            &kp N0           &kp DELETE
&kp TAB           &kp Q            &kp W              &kp E                &kp R                   &longPress LC(T) T    &kp DOWN_ARROW   &kp Y               &kp U                    &kp I                 &kp O             &kp P            &DBTslash
&DBTcapsword      &HML LEFT_GUI A  &HML LEFT_ALT S    &HML LEFT_CONTROL D  &HMLshift LEFT_SHIFT F  &kp G                 &kp LEFT_ARROW   &kp H               &HMRshift RIGHT_SHIFT J  &HMR RIGHT_CONTROL K  &HMR RIGHT_ALT L  &DBTexclamation  &DBTquotes
&kp LEFT_CONTROL  &kp Z            &kp X              &kp C                &kp V                   &kp B                 &kp RIGHT_ARROW  &longPress LC(N) N  &kp M                    &DBTsemicolon         &DBTcolon         &DBTunderscore   &longPress PRINTSCREEN ESCAPE
&kp C_MUTE        &kp CAPSLOCK     &kp K_APPLICATION  &mo 1                &mo 2                   &lt 3 SPACE           &kp ENTER        &lt 3 BACKSPACE     &lt 2 DELETE             &mo 1                 &key_repeat       &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "BASE";
            label = "BASE";
        };

        layer1 {
            bindings = <
&bootloader      &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4       &mmv MOVE_UP      &trans  &kp CAPSLOCK  &kp KP_NUMLOCK  &kp SCROLLLOCK  &trans   &bootloader
&sys_reset       &bt BT_CLR       &bt BT_CLR_ALL   &trans           &trans        &trans             &mmv MOVE_DOWN    &trans  &kp F7        &kp F8          &kp F9          &kp F10  &sys_reset
&trans           &out OUT_USB     &out OUT_BLE     &trans           &trans        &rgb_ug RGB_HUI    &kp C_PREVIOUS    &trans  &kp F4        &kp F5          &kp F6          &kp F11  &trans
&rgb_ug RGB_TOG  &trans           &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &trans        &rgb_ug RGB_HUD    &kp C_NEXT        &trans  &kp F1        &kp F2          &kp F3          &kp F12  &rgb_ug RGB_TOG
&kp C_MUTE       &rgb_ug RGB_BRD  &rgb_ug RGB_EFR  &trans           &trans        &trans             &kp C_PLAY_PAUSE  &trans  &trans        &trans          &trans          &trans
            >;

            display-name = "LOWER";
            sensor-bindings = <&scroll_encoder>;
            label = "LOWER";
        };

        layer2 {
            bindings = <
&to 0   &trans          &trans           &trans          &trans           &trans           &kp LG(UP_ARROW)     &trans  &trans          &trans             &trans         &trans  &trans
&trans  &pair_braces    &kp HOME         &kp UP_ARROW    &kp END          &kp PAGE_UP      &kp LG(DOWN_ARROW)   &trans  &kp ENTER       &kp TAB            &kp BACKSPACE  &trans  &trans
&trans  &pair_parens    &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN    &kp LG(LEFT_ARROW)   &trans  &kp LEFT_SHIFT  &kp LEFT_CONTROL   &kp LEFT_ALT   &trans  &trans
&trans  &pair_brackets  &kp LC(LS(TAB))  &kp LC(TAB)     &kp LA(ESC)      &trans           &kp LG(RIGHT_ARROW)  &trans  &kp ESCAPE      &kp K_APPLICATION  &kp DELETE     &trans  &trans
&trans  &trans          &trans           &trans          &trans           &trans           &mkp LCLK            &trans  &trans          &trans             &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp RIGHT_ARROW LEFT_ARROW>;
            label = "UPPER";
        };

        layer3 {
            bindings = <
&to 0   &trans     &trans          &trans          &trans           &trans             &mmv MOVE_UP     &kp KP_DIVIDE    &mkp LCLK                   &mkp MCLK               &mkp RCLK                        &trans     &trans
&trans  &trans     &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &msc SCRL_UP       &mmv MOVE_DOWN   &kp KP_MULTIPLY  &longPress AMPERSAND N7     &longPress ASTERISK N8  &longPress LEFT_PARENTHESIS N9   &trans     &trans
&trans  &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN     &mmv MOVE_LEFT   &kp KP_PLUS      &longPress DOLLAR NUMBER_4  &longPress PERCENT N5   &longPress CARET NUMBER_6        &trans     &trans
&trans  &kp ENTER  &mkp MB4        &mkp MB5        &msc SCRL_LEFT   &msc SCRL_RIGHT    &mmv MOVE_RIGHT  &kp KP_MINUS     &longPress EXCL NUMBER_1    &longPress AT NUMBER_2  &longPress HASH NUMBER_3         &trans     &trans
&trans  &trans     &trans          &trans          &trans           &trans             &trans           &kp ENTER        &mkp LCLK                   &kp KP_DOT              &longPress RIGHT_PARENTHESIS N0  &kp ENTER
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "SUPER";
        };

        layer4 {
            bindings = <
&kp ESCAPE  &kp N1        &kp N2  &kp N3  &kp N4  &kp N5       &mmv MOVE_UP     &kp N6         &kp N7      &kp N8     &kp N9   &kp N0             &kp DELETE
&kp TAB     &kp Q         &kp W   &kp E   &kp R   &kp T        &mmv MOVE_DOWN   &kp Y          &kp U       &kp I      &kp O    &kp P              &kp BACKSLASH
&kp LSHFT   &kp A         &kp S   &kp D   &kp F   &kp G        &mmv MOVE_LEFT   &kp H          &kp J       &kp K      &kp L    &kp SEMI           &kp SINGLE_QUOTE
&kp LCTRL   &kp Z         &kp X   &kp C   &kp V   &kp B        &mmv MOVE_RIGHT  &kp N          &kp M       &kp COMMA  &kp DOT  &kp FSLH           &to 0
&kp C_MUTE  &kp LEFT_GUI  &trans  &trans  &trans  &kp SPACE    &mkp LCLK        &kp BACKSPACE  &kp DELETE  &trans     &trans   &kp K_APPLICATION
            >;

            label = "QWERTY";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer5 {
            bindings = <
&kp ESC    &kp N1        &kp N2  &kp N3  &kp N4  &kp N5       &trans  &kp N6    &kp N7      &kp N8     &kp N9         &kp N0           &kp DEL
&kp TAB    &kp Q         &kp W   &kp F   &kp P   &kp B        &trans  &kp J     &kp L       &kp U      &kp Y          &DBTexclamation  &DBTslash
&kp LSHFT  &kp A         &kp R   &kp S   &kp T   &kp G        &trans  &kp M     &kp N       &kp E      &kp I          &kp O            &DBTquotes
&kp LCTRL  &kp Z         &kp X   &kp C   &kp D   &kp V        &trans  &kp K     &kp H       &DBTcolon  &DBTsemicolon  &DBTunderscore   &to 0
&trans     &kp LEFT_GUI  &trans  &trans  &trans  &kp SPACE    &trans  &kp BSPC  &kp DELETE  &trans     &trans         &trans
            >;

            label = "COLEMAK";
        };

        layer6 {
            bindings = <
&kp ESC    &kp N1        &kp N2         &kp N3      &kp N4  &kp N5       &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB    &kp Q         &kp W          &kp E       &kp R   &kp T        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp A         &kp S          &kp D       &kp F   &kp G        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp Z         &kp X          &kp C       &kp V   &kp B        &trans  &trans  &trans  &trans  &trans  &trans  &to 0
&trans     &kp LEFT_GUI  &kp BACKSPACE  &kp DELETE  &mo 7   &kp SPACE    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "ONEHAND";
        };

        layer7 {
            bindings = <
&kp ESC    &kp N6  &kp N7    &kp N8     &kp N9   &kp N0      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB    &kp Y   &kp U     &kp I      &kp O    &kp P       &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp H   &kp J     &kp K      &kp L    &kp SEMI    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &kp CAPS  &trans     &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "ONEHAND2";
        };
    };
};
