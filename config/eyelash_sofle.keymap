#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    time-to-max-speed-ms = <40>;       // 300
    delay-ms = <10>;                   // 0
    trigger-period-ms = <80>;
};

&mmv {
    time-to-max-speed-ms = <1>;
    acceleration-exponent = <0>;
    delay-ms = <2>;
    trigger-period-ms = <5>;
};

&lt {
    flavor = "balanced";
    hold-trigger-on-release;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    DBTunderscore: DBTunderscore {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTUNDERSCORE";
        #binding-cells = <0>;
        bindings = <&kp MINUS>, <&kp UNDER>;
    };

    DBTquotes: DBTquotes {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTQUOTES";
        #binding-cells = <0>;
        bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;
    };

    DBTsemicolon: DBTsemicolon {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTSEMICOLON";
        #binding-cells = <0>;
        bindings = <&kp COMMA>, <&kp SEMICOLON>;
    };

    DBTexclamation: DBTexclamation {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTEXCLAMATION";
        #binding-cells = <0>;
        bindings = <&kp QUESTION>, <&kp EXCL>;
    };

    DBTslash: DBTslash {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTSLASH";
        #binding-cells = <0>;
        bindings = <&kp SLASH>, <&kp BACKSLASH>;
    };

    DBTcolon: DBTcolon {
        compatible = "zmk,behavior-tap-dance";
        label = "DBTCOLON";
        #binding-cells = <0>;
        bindings = <&kp PERIOD>, <&kp COLON>;
    };

    longPress: longPress {
        compatible = "zmk,behavior-hold-tap";
        label = "LONGPRESS";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <350>;
        flavor = "tap-preferred";
    };

    HMRshift: HMRshift {
        compatible = "zmk,behavior-hold-tap";
        label = "HMRSHIFT";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <220>;
        hold-while-undecided;
        hold-trigger-key-positions = <0 13 14 27 26 39 40 1 44 2 2 3 4 15 16 17 28 29 30 5 18 31 44 41 42 43 44 53 54 55 56 57>;
        hold-trigger-on-release;
    };

    HMLshift: HMLshift {
        compatible = "zmk,behavior-hold-tap";
        label = "HMLSHIFT";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <220>;
        hold-while-undecided;
        hold-trigger-on-release;
        hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 60 61 62 63 59>;
    };

    HMR: HMR {
        compatible = "zmk,behavior-hold-tap";
        label = "HMR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <220>;
        hold-trigger-key-positions = <0 13 14 27 26 39 40 1 44 2 2 3 4 15 16 17 28 29 30 5 18 31 44 41 42 43 44 53 54 55 56 57>;
        hold-trigger-on-release;
        flavor = "balanced";
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
    };

    HML: HML {
        compatible = "zmk,behavior-hold-tap";
        label = "HML";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <220>;
        hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 60 61 62 63 59>;
        flavor = "balanced";
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
        hold-trigger-on-release;
    };

    HMRguiDBT: HMRguiDBT {
        compatible = "zmk,behavior-hold-tap";
        label = "HMRGUIDBT";
        bindings = <&kp>, <&DBTexclamation>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        hold-while-undecided;
        hold-trigger-key-positions = <0 13 14 27 26 39 40 1 44 2 2 3 4 15 16 17 28 29 30 5 18 31 44 41 42 43 44 53 54 55 56 57>;
        hold-trigger-on-release;
        flavor = "tap-preferred";
    };

    combos {
        compatible = "zmk,combos";

        softOFF {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
            timeout-ms = <2000>;
        };

        accent1 {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <41 42>;
        };

        accent2 {
            bindings = <&kp TILDE>;
            key-positions = <15 16>;
        };

        accent3 {
            bindings = <&kp CARET>;
            key-positions = <15 17>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC           &kp N1           &kp N2              &kp N3               &kp N4                  &kp N5                &kp UP_ARROW     &kp N6           &kp N7                   &kp N8                &kp N9            &kp N0           &kp DELETE
&kp TAB           &kp Q            &kp W               &kp E                &kp R                   &longPress LC(T) T    &kp DOWN_ARROW   &kp Y            &kp U                    &kp I                 &kp O             &kp P            &DBTslash
&kp LEFT_SHIFT    &HML LEFT_GUI A  &HML LEFT_ALT S     &HML LEFT_CONTROL D  &HMLshift LEFT_SHIFT F  &kp G                 &kp LEFT_ARROW   &kp H            &HMRshift RIGHT_SHIFT J  &HMR RIGHT_CONTROL K  &HMR RIGHT_ALT L  &DBTexclamation  &DBTquotes
&kp LEFT_CONTROL  &kp Z            &longPress LC(X) X  &longPress LC(C) C   &longPress LC(V) V      &kp B                 &kp RIGHT_ARROW  &kp N            &kp M                    &DBTsemicolon         &DBTcolon         &DBTunderscore   &kp PRINTSCREEN
&kp C_MUTE        &kp CAPSLOCK     &mo 4               &mo 1                &mo 2                   &lt 3 SPACE           &kp ENTER        &lt 3 BACKSPACE  &lt 2 DELETE             &mo 1                 &none             &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "BASE";
            label = "BASE";
        };

        layer1 {
            bindings = <
&bootloader      &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &trans  &trans  &trans  &trans  &trans   &bootloader
&sys_reset       &bt BT_CLR       &bt BT_CLR_ALL   &trans           &trans        &trans          &mmv MOVE_DOWN   &trans  &kp F7  &kp F8  &kp F9  &kp F10  &sys_reset
&trans           &out OUT_USB     &out OUT_BLE     &trans           &trans        &trans          &mmv MOVE_LEFT   &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&rgb_ug RGB_TOG  &trans           &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &trans        &trans          &mmv MOVE_RIGHT  &trans  &kp F1  &kp F2  &kp F3  &kp F12  &trans
&kp C_MUTE       &rgb_ug RGB_BRD  &rgb_ug RGB_EFR  &trans           &trans        &trans          &mkp LCLK        &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "LOWER";
            sensor-bindings = <&scroll_encoder>;
            label = "LOWER";
        };

        layer2 {
            bindings = <
&trans  &trans  &trans           &trans          &trans           &trans           &mmv MOVE_UP     &trans  &trans  &trans  &trans     &trans  &trans
&trans  &trans  &kp HOME         &kp UP_ARROW    &kp END          &kp PAGE_UP      &mmv MOVE_DOWN   &trans  &trans  &trans  &trans     &trans  &trans
&trans  &trans  &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN    &mmv MOVE_LEFT   &trans  &trans  &trans  &trans     &trans  &trans
&trans  &trans  &kp LC(LS(TAB))  &kp LC(TAB)     &kp LA(ESC)      &trans           &mmv MOVE_RIGHT  &trans  &trans  &trans  &soft_off  &trans  &trans
&trans  &trans  &trans           &trans          &trans           &trans           &mkp LCLK        &trans  &trans  &trans  &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "UPPER";
        };

        layer3 {
            bindings = <
&trans  &trans  &mkp MB4        &mkp MCLK       &mkp MB5         &trans             &kp LG(UP_ARROW)     &kp KP_ASTERISK  &kp KP_DIVIDE               &trans                  &trans                           &trans     &trans
&trans  &trans  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &msc SCRL_UP       &kp LG(DOWN)         &kp KP_PLUS      &longPress AMPERSAND N7     &longPress ASTERISK N8  &longPress LEFT_PARENTHESIS N9   &trans     &trans
&trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN     &kp LG(LEFT_ARROW)   &kp KP_MINUS     &longPress DOLLAR NUMBER_4  &longPress PERCENT N5   &longPress CARET NUMBER_6        &trans     &trans
&trans  &trans  &kp K_BACK      &kp K_FORWARD   &msc SCRL_LEFT   &msc SCRL_RIGHT    &kp LG(RIGHT_ARROW)  &kp KP_DOT       &longPress EXCL NUMBER_1    &longPress AT NUMBER_2  &longPress HASH NUMBER_3         &trans     &trans
&trans  &trans  &trans          &trans          &trans           &trans             &trans               &kp ENTER        &trans                      &mkp LCLK               &longPress RIGHT_PARENTHESIS N0  &kp ENTER
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "SUPER";
        };

        layer4 {
            bindings = <
&trans  &trans  &trans          &mmv MOVE_UP    &trans           &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "HYPER";
        };
    };
};
